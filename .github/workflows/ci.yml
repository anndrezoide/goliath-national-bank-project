name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr-and-merge:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o Git
      - name: Set up Git
        run: |
          git config --global user.name "André Gomes"
          git config --global user.email "dhegomeez@gmail.com"

      # Passo 3: Criar o Pull Request da branch dev/develop para homolog
      - name: Create Pull Request to Homolog
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: homolog
          head: develop  # Ajuste para "dev" ou "develop" conforme necessário
          title: "Pull Request de Dev para Homolog"
          body: "Esse PR faz merge da branch dev para homolog para revisão e testes."

      # Passo 4: Validar o código no Pull Request (exemplo usando testes)
      - name: Run Tests on Pull Request
        run: |
          mvn clean install
          mvn test

      # Passo 5: Criar PR de homolog para main e fazer merge automático
      - name: Create Pull Request to Main
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: homolog
          title: "Merge Homolog to Main"
          body: "Esse PR faz merge da branch homolog para main após aprovação."

      - name: Merge Pull Request to Main
        uses: peter-evans/merge-pull-request@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: merge
